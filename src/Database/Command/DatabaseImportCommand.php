<?php

namespace DevopsToolCore\Database\Command;

use DevopsToolCore\Database\DatabaseImportAdapterFactory;
use DevopsToolCore\Database\DatabaseImportAdapterInterface;
use DevopsToolCore\Exception;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

class DatabaseImportCommand extends Command
{
    /**
     * @var DatabaseImportAdapterInterface
     */
    private $databaseImportAdapter;
    /**
     * @var DatabaseImportAdapterFactory
     */
    private $databaseImportAdapterFactory;

    public function __construct(DatabaseImportAdapterFactory $databaseImportAdapterFactory, $name = null)
    {
        parent::__construct($name);
        $this->databaseImportAdapterFactory = $databaseImportAdapterFactory;
    }

    protected function configure()
    {
        $this->setName('database:import')
            ->addArgument('database', InputArgument::REQUIRED, 'Database to import into.')
            ->addArgument('filename', InputArgument::REQUIRED, 'File to import')
            ->addOption(
                'format',
                null,
                InputOption::VALUE_REQUIRED
            )
            ->setDescription('Import a file generated by devops database:export into a database.')
            ->setHelp(
                "This command imports a file generated by devops database:export into a database."
            );
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        error_reporting(-1);
        $output->writeln(
            [
                'Database: Import',
                '============',
                '',
            ]
        );

        $this->databaseImportAdapter = $this->databaseImportAdapterFactory->create($input->getOption('format'));

        if (!$this->databaseImportAdapter->isUsable()) {
            throw new Exception\RuntimeException(
                sprintf(
                    'The given database import adapter "%s" is not usable in this environment.',
                    get_class($this->databaseImportAdapter)
                )
            );
        }

        $database = $input->getArgument('database');
        $filename = $input->getArgument('filename');
        $format = $input->getOption('format');


        $output->writeln("Importing \"$filename\" into database \"$database\"...");
        $this->databaseImportAdapter->importFromFile(
            $database,
            $filename
        );
        $output->writeln("\"$filename\" imported into database \"$database\".");
        return 0;
    }

}
